const API_KEY="daa03fdcd151c847dbb9e1008f179e84",API_BASE_URL="https://api.themoviedb.org/3",movieSite=Vue.createApp({data:()=>({searchInput:"",loaded:!1,moviesList:[],totalPages:1,activePage:1,totalMovies:0,activeURL:"",searchMoviesUrl:API_BASE_URL+"/search/movie?api_key="+API_KEY+"&language=en-US&page=1",latestMoviesUrl:API_BASE_URL+"/movie/now_playing?api_key="+API_KEY+"&language=en-US&page=1",errorOccured:!1,imgPath:"https://image.tmdb.org/t/p/w500/",modalOpen:!1,panelTitle:"",panelYear:"",panelTeaser:"",panelRate:"",panelInfo:"",panelPoster:"",panelDir:"",panelCast:"",panelGenre:"",panelRuntime:""}),mounted(){this.activeURL=this.latestMoviesUrl,this.getMoviesList()},methods:{async getJSON(url,errorMsg){const response=await fetch(url);if(!response.ok)throw new Error(`${errorMsg} - ${response.status}`);return await response.json()},getMoviesList(){this.getJSON(this.activeURL,"Movie List - cannot get the list data").then(data=>{this.moviesList=data.results,this.activePage=data.page,this.totalMovies=data.total_results,this.totalPages=data.total_pages,this.errorOccured=!1}).catch(err=>{console.error(err),this.errorOccured=!0}).finally(()=>{this.loaded=!0})},searchMovies(){let inputText=this.searchInput.trim();inputText?(this.activeURL=this.searchMoviesUrl+"&query="+inputText,this.getMoviesList()):(this.activeURL=this.latestMoviesUrl,this.getMoviesList()),this.searchInput=""},pagePrev(){let prevPage=this.activePage;prevPage--,prevPage>=1&&this.handlePaging(prevPage)},pageNext(){let nextPage=this.activePage;nextPage++,nextPage<=this.totalPages&&this.handlePaging(nextPage)},handlePaging(page){let url=this.updateQSParameter("page",page);this.activeURL=url,this.getMoviesList()},getYear(date){const movDate=new Date(date);return movDate.getFullYear()},truncateString:(s,n)=>s.length>n?s.substr(0,n-1)+"&hellip;":s,updateQSParameter(key,value){let url=this.activeURL.toString(),re=new RegExp("([?&])"+key+"=.*?(&|$)","i"),sep=-1!==url.indexOf("?")?"&":"?";return url.match(re)?url.replace(re,"$1"+key+"="+value+"$2"):url+sep+key+"="+value},openModal(movieid){const movieCreditsURL=API_BASE_URL+"/movie/"+movieid+"/credits?api_key="+API_KEY+"&language=en-US",movieURL=API_BASE_URL+"/movie/"+movieid+"?api_key="+API_KEY+"&language=en-US";Promise.all([this.getJSON(movieCreditsURL,"Movie Credits - cannot get the credits"),this.getJSON(movieURL,"Movie Info - cannot get the movie information")]).then(([credits,details])=>{this.renderMovie(details,credits)})},closeModal(){this.modalOpen=!1},renderMovie(details,credits){const{title:title,overview:overview,backdrop_path:backdrop_path,vote_average:vote_average,release_date:release_date,genres:genres,runtime:runtime}=details,genreData=genres.map(item=>item.name),directors=credits.crew.filter(item=>"Director"===item.job),cast=credits.cast.map(item=>{if("Acting"===item.known_for_department)return item.name});let movieSpecifics="",creditDirs=[],creditCast=cast.slice(0,3);directors.forEach(item=>{creditDirs.push(item.name)}),creditDirs.length>0&&(this.panelDir=creditDirs.join(", ")),creditCast.length>0&&(this.panelCast=creditCast.join(", ")),genreData.length>0&&(this.panelGenre=genreData.join(", "));const posterImg=null!=backdrop_path?"https://image.tmdb.org/t/p/w500"+backdrop_path:"assets/main/img/layout/empty-back.jpg";this.panelTitle=title,this.panelYear=this.getYear(release_date),this.panelTeaser=this.truncateString(overview,400),this.panelRate=vote_average,this.panelInfo="",this.posterImg=posterImg,this.panelRuntime=runtime,this.modalOpen=!0}}}).mount("#movie-list");